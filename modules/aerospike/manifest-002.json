{
  "extend": {
    "funcName": "",
    "querylist": [
      {
        "datasource": "dataflux",
        "qtype": "dql",
        "query": {
          "children": [
            {
              "alias": "",
              "code": "A",
              "dataSource": "aerospike",
              "field": "namespace_device_available_pct",
              "fieldFunc": "last",
              "fieldType": "float",
              "groupBy": [
                "ns",
                "cluster_name"
              ],
              "groupByTime": "",
              "namespace": "metric",
              "q": "M::`aerospike`:(LAST(`namespace_device_available_pct`)) BY `ns`, `cluster_name`",
              "type": "simple"
            }
          ],
          "code": "Result",
          "expression": "100-A",
          "funcList": [],
          "q": "eval(100-A, A=\"M::`aerospike`:(LAST(`namespace_device_available_pct`)) BY `ns`, `cluster_name`\")",
          "type": "expression"
        },
        "uuid": "2bb1fc94-909c-4c9c-a282-29047555150d"
      }
    ],
    "rules": [
      {
        "conditionLogic": "and",
        "conditions": [
          {
            "alias": "Result",
            "operands": [
              "90"
            ],
            "operator": "\u003e="
          }
        ],
        "status": "critical"
      },
      {
        "conditionLogic": "and",
        "conditions": [
          {
            "alias": "Result",
            "operands": [
              "80"
            ],
            "operator": "\u003e="
          }
        ],
        "status": "error"
      },
      {
        "conditionLogic": "and",
        "conditions": [
          {
            "alias": "Result",
            "operands": [
              "60"
            ],
            "operator": "\u003e="
          }
        ],
        "status": "warning"
      }
    ]
  },
  "is_disable": false,
  "jsonScript": {
    "checkerOpt": {
      "rules": [
        {
          "conditionLogic": "and",
          "conditions": [
            {
              "alias": "Result",
              "operands": [
                "90"
              ],
              "operator": "\u003e="
            }
          ],
          "status": "critical"
        },
        {
          "conditionLogic": "and",
          "conditions": [
            {
              "alias": "Result",
              "operands": [
                "80"
              ],
              "operator": "\u003e="
            }
          ],
          "status": "error"
        },
        {
          "conditionLogic": "and",
          "conditions": [
            {
              "alias": "Result",
              "operands": [
                "60"
              ],
              "operator": "\u003e="
            }
          ],
          "status": "warning"
        }
      ]
    },
    "every": "1m",
    "groupBy": [
      "ns",
      "cluster_name"
    ],
    "interval": 300,
    "message": "\u003e等级：{{df_status}}  \n\u003e集群：{{cluster_name}} \n\u003e空间：{{ns}}  \n{% if  df_status != 'ok' %}\u003e状态：告警发生\n\u003e内容：Aerospike 集群【{{cluster_name}}】 空间【 {{ ns }}】的 Storage 使用率过高，当前使用率为： {{ Result }} %。\n {% else %}\u003e状态：告警恢复\n\u003e内容：Aerospike 集群【{{cluster_name}}】 空间【 {{ ns }}】的 Storage 告警恢复，当前使用率为： {{ Result }} %。\n{% endif %}",
    "recoverNeedPeriodCount": 5,
    "targets": [
      {
        "alias": "Result",
        "dql": "eval(100-A, A=\"M::`aerospike`:(LAST(`namespace_device_available_pct`)) BY `ns`, `cluster_name`\")"
      }
    ],
    "title": "Aerospike 集群【{{cluster_name}}】空间【{{ ns }}】 的 Storage 使用率过高",
    "type": "simpleCheck"
  },
  "monitorName": "默认分组"
}